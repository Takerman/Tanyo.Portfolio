<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="2016 - IoT devices mobile installer" xml:space="preserve">
    <value>2016 - ИТН мобильные устройства инсталлятор</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>Около</value>
  </data>
  <data name="Aug" xml:space="preserve">
    <value>август</value>
  </data>
  <data name="Client" xml:space="preserve">
    <value>клиент</value>
  </data>
  <data name="Completed" xml:space="preserve">
    <value>Завершенный</value>
  </data>
  <data name="Design Patterns Package" xml:space="preserve">
    <value>Шаблоны пакета</value>
  </data>
  <data name="DOWNLOAD" xml:space="preserve">
    <value>СКАЧАТЬ</value>
  </data>
  <data name="I wanted to create a package with design patterns which contains the most used design patterns while I am learning them from this" xml:space="preserve">
    <value>Я хотел создать пакет с шаблонами дизайна, который содержит большинство моделей используемого дизайна в то время как я изучаю их от этого</value>
  </data>
  <data name="In my free time I created a webserver for my emails, websites etc. from 3 Raspberry PIs. They work as One virtual machine through the Docker swarm mode and can run multiple applications, scale them etc. As a cloud platform. I use the cluster as media center for my TV and smart house center too. I am constantly upgrading it and I have plan to make my appartment event smarter. Currently I am able to run ASP.NET Core apps and APIs with docker there. I am using it as a Database server for MariaDb too." xml:space="preserve">
    <value>В свободное время я создал веб-сервер для моей электронной почты, веб-сайты и т.д. от 3 малина НЦБ. Они работают в одной виртуальной машине через режим роя Докер и может работать с несколькими приложениями, масштабировать их и т.д. В качестве облачной платформы. Я использую кластер в качестве медиа-центра для телевизора и умный дом центре тоже. Я постоянно совершенствую его, и у меня есть план, чтобы сделать мою многокомнатную квартиру Smarter события. В настоящее время я могу запустить ASP.NET Основные приложения и интерфейсы прикладного программирования с грузчиком там. Я использую его в качестве сервера базы данных для MariaDB тоже.</value>
  </data>
  <data name="Jan" xml:space="preserve">
    <value>январь</value>
  </data>
  <data name="My spare time" xml:space="preserve">
    <value>Мое свободное время</value>
  </data>
  <data name="playlist" xml:space="preserve">
    <value>плейлист</value>
  </data>
  <data name="Project Info" xml:space="preserve">
    <value>Информация о проекте</value>
  </data>
  <data name="Rating" xml:space="preserve">
    <value>Рейтинг</value>
  </data>
  <data name="Started" xml:space="preserve">
    <value>Начал</value>
  </data>
  <data name="Tech" xml:space="preserve">
    <value>Технология</value>
  </data>
  <data name="Website" xml:space="preserve">
    <value>Веб-сайт</value>
  </data>
</root>